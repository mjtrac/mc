
package sample.camel;

import org.apache.camel.builder.RouteBuilder;
import org.apache.camel.component.netty.NettyConfiguration;
import org.springframework.context.annotation.Bean;
import org.springframework.context.annotation.Configuration;
import org.springframework.stereotype.Component;
import org.apache.camel.support.jsse.SSLContextParameters;
import org.apache.camel.support.jsse.KeyStoreParameters;
import org.apache.camel.support.jsse.KeyManagersParameters;
import org.apache.camel.support.jsse.CipherSuitesParameters;
import java.util.List;
@Configuration
public class NettySslConfig {

    @Bean
    public NettyConfiguration nettyConfig() {
	System.out.println("****** nettyConfig *********");
        NettyConfiguration config = new NettyConfiguration();
        config.setSsl(true);
        config.setKeyStoreFormat("JKS");
        config.setKeyStoreResource("file:/Users/mjtrac/test.jks");
        config.setTrustStoreResource("file:/Users/mjtrac/test.jks");
        //config.setPassphrase("tnuWaA6oF1Be"); // Replace with your password
        config.setPassphrase("password"); // Replace with your password
	config.setProtocol("tcp");
	config.setHost("localhost");
	config.setPort(15679);
	System.out.println(config.toStringBootstrapConfiguration());

	SSLContextParameters sslContextParameters = new SSLContextParameters();
	
	KeyStoreParameters keyStoreParameters = new KeyStoreParameters();
	keyStoreParameters.setResource("file:/Users/mjtrac/test.jks");
	//keyStoreParameters.setPassword("tnuWaA6oF1Be");
	keyStoreParameters.setPassword("password");

	KeyManagersParameters keyManagersParameters = new KeyManagersParameters();
	keyManagersParameters.setKeyStore(keyStoreParameters);
	//keyManagersParameters.setKeyPassword("BezGbpwBmXaU");
	keyManagersParameters.setKeyPassword("password");

	sslContextParameters.setKeyManagers(keyManagersParameters);
        sslContextParameters.setSecureSocketProtocol("TLSv1.3"); // Set the protocol here
	CipherSuitesParameters cipherSuitesParameters = new CipherSuitesParameters();
	cipherSuitesParameters.setCipherSuite(

					     List.of(
						     "TLS_AES_128_GCM_SHA256"
						     )
        );
sslContextParameters.setCipherSuites(cipherSuitesParameters);
        config.setSslContextParameters(sslContextParameters);
	System.out.println(sslContextParameters.toString());
	System.out.println("About to return config in nettyConfig()");
        return config;
    }
}

