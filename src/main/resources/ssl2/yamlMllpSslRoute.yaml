#Demonstrates problem with MLLP response from forward.
# Remove setProperty to fail.
- route:
    id: MllpSSLForwardingRoute
    from:
      uri: "mllp://0.0.0.0:{{camel.mllp.ssl.inbound.port}}?autoAck=false&sslContextParameters=#mysslContextParameters"
      steps:
        # Capture message body in header
        # so body can become an insert statement for jdbc
        - setHeader:
            name: originalBody
            simple: "${body}"
        - setBody:
            simple: "INSERT INTO mytable (name, value) VALUES ('body', '${header.originalBody}')"
        # Call jdbc
        - to: "jdbc:dataSource"
        # Restore the original body
        - setBody:
            simple: "${header.originalBody.toString()}"
        # Send it out to outbound port
        # using params from bean mysslContextParameters
        - to: "mllp://0.0.0.0:{{camel.mllp.ssl.outbound.port}}?autoAck=false&sslContextParameters=#mysslContextParameters"
        - log:
            message: "Body: ${body.replaceAll('\\r','\\n')}"
        - log:
            message: "No set exchangeProp CamelMllpAcknowledgementString:\n${exchangeProperty.CamelMllpAcknowledgementString.replaceAll('\\r','\\n')}"
        - log:
            message: "But got header CamelMllpAcknowledgementString:\n${headers.CamelMllpAcknowledgementString.replaceAll('\\r','\\n')}"
        - log: "Set exchangeProperty to header value."
        - setProperty:
            name: "CamelMllpAcknowledgementString"
            simple: "${header.CamelMllpAcknowledgementString}"
        - log:
            message: "Body: ${body.replaceAll('\\r','\\n')}"
        - log:
            message: "exchangeProperty set from header:\n${exchangeProperty.CamelMllpAcknowledgementString.replaceAll('\\r','\\n')}"
